- page_title    'New Project'
- header_title  "Projects", dashboard_projects_path

%h3.page-title
  New Project
%hr

.project-edit-container
  .project-edit-errors
    = render 'projects/errors'
  .project-edit-content

    = form_for @project, html: { class: 'new_project form-horizontal js-requires-input' } do |f|
      .form-group
        = f.label :path, class: 'control-label' do
          Project owner
        .col-sm-10
          = f.select :namespace_id, namespaces_options(params[:namespace_id] || :current_user, display_path: true), {}, {class: 'select2 js-select-namespace', tabindex: 1}
        
          - if current_user.can_create_group?
            .help-block
              Want to house several dependent projects under the same namespace?
              = link_to "Create a group", new_group_path
              
      .form-group
        = f.label :path, class: 'control-label' do
          Project name
        .col-sm-10
          = f.text_field :path, placeholder: "my-awesome-project", class: "form-control", tabindex: 2, autofocus: true, required: true

      - if import_sources_enabled?
        .project-import.js-toggle-container
          .form-group
            %label.control-label Import project from
            .col-sm-10
              - if github_import_enabled?
                - if github_import_configured?
                  = link_to status_import_github_path, class: 'btn import_github' do
                    %i.fa.fa-github
                    GitHub
                - else
                  = link_to '#', class: 'how_to_import_link btn import_github' do
                    %i.fa.fa-github
                    GitHub
                  = render 'github_import_modal'

              - if bitbucket_import_enabled?
                - if bitbucket_import_configured?
                  = link_to status_import_bitbucket_path, class: 'btn import_bitbucket', "data-no-turbolink" => "true" do
                    %i.fa.fa-bitbucket
                    Bitbucket
                - else
                  = link_to status_import_bitbucket_path, class: 'how_to_import_link btn import_bitbucket', "data-no-turbolink" => "true" do
                    %i.fa.fa-bitbucket
                    Bitbucket
                  = render 'bitbucket_import_modal'

              - if gitlab_import_enabled?
                - if gitlab_import_configured?
                  = link_to status_import_gitlab_path, class: 'btn import_gitlab' do
                    %i.fa.fa-heart
                    GitLab.com
                - else
                  = link_to status_import_gitlab_path, class: 'how_to_import_link btn import_gitlab' do
                    %i.fa.fa-heart
                    GitLab.com
                  = render 'gitlab_import_modal'

              - if gitorious_import_enabled?
                = link_to new_import_gitorious_path, class: 'btn import_gitorious' do
                  %i.icon-gitorious.icon-gitorious-small
                  Gitorious.org

              - if google_code_import_enabled?
                = link_to new_import_google_code_path, class: 'btn import_google_code' do
                  %i.fa.fa-google
                  Google Code

              - if fogbugz_import_enabled?
                = link_to new_import_fogbugz_path, class: 'btn import_fogbugz' do
                  %i.fa.fa-bug
                  Fogbugz

              - if git_import_enabled?
                = link_to "#", class: 'btn js-toggle-button import_git' do
                  %i.fa.fa-git
                  %span Repo by URL

              - if gitlab_project_import_enabled?
                = link_to new_import_gitlab_project_path, class: 'btn import_gitlab_project project-submit' do
                  %i.fa.fa-gitlab
                  %span GitLab export

          .js-toggle-content.hide
            = render "shared/import_form", f: f

      .prepend-botton-10

      .form-group
        = f.label :description, class: 'control-label' do
          Description
          %span.light (optional)
        .col-sm-10
          = f.text_area :description, class: "form-control", rows: 3, maxlength: 250, tabindex: 3
      = render 'shared/visibility_level', f: f, visibility_level: default_project_visibility, can_change_visibility_level: true, form_model: @project

      .form-actions
        = f.submit 'Create project', class: "btn btn-create project-submit", tabindex: 4
        = link_to 'Cancel', dashboard_projects_path, class: 'btn btn-cancel'

.save-project-loader.hide
  .center
    %h2
      %i.fa.fa-spinner.fa-spin
      Creating project &amp; repository.
    %p Please wait a moment, this page will automatically refresh when ready.

:javascript
  $('.how_to_import_link').bind('click', function (e) {
    e.preventDefault();
    var import_modal = $(this).next(".modal").show();
  });

  $('.modal-header .close').bind('click', function() {
    $(".modal").hide();
  });

  $('.import_gitlab_project').bind('click', function() {
    var _href = $("a.import_gitlab_project").attr("href");
    $(".import_gitlab_project").attr("href", _href + '?namespace_id=' + $("#project_namespace_id").val() + '&path=' + $("#project_path").val());
  });

  $('.import_gitlab_project').attr('disabled',true)
  $('.import_gitlab_project').attr('title', 'Project path required.');

  $('.import_gitlab_project').click(function( event ) {
    if($('.import_gitlab_project').attr('disabled')) {
      event.preventDefault();
      new Flash("Please enter a path for the project to be imported to.");
    }
  });

  $('#project_path').keyup(function(){
    if($(this).val().length !=0) {
      $('.import_gitlab_project').attr('disabled', false);
      $('.import_gitlab_project').attr('title','');
      $(".flash-container").html("")
    } else {
      $('.import_gitlab_project').attr('disabled',true);
      $('.import_gitlab_project').attr('title', 'Project path required.');
    }
  })
